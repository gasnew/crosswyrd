import _ from 'lodash';
import quantize from 'quantize';

interface FrameType {
  colorTable: [number, number, number][];
}
export function buildGlobalPalette(frames: FrameType[]): number[][] {
  // Possibly thousands of unique colors
  const allColors = _.flatMap(frames, (frame) =>
    _.map(frame.colorTable, (color) => [color[0], color[1], color[2]])
  );

  // Quantize the palette
  const quantizedColors = _.uniqBy(
    quantize(allColors, 256).palette(),
    (color: number[]) => `r${color[0]}g${color[1]}b${color[2]}`
  );

  // Pad out the palette with random unique colors to get to 256
  let paddedPalette = quantizedColors;
  while (paddedPalette.length < 256) {
    paddedPalette = _.uniqBy(
      [
        ...quantizedColors,
        ..._.times(256 - quantizedColors.length, (index) => [
          _.random(0, 256),
          _.random(0, 256),
          _.random(0, 256),
        ]),
      ],
      (color: number[]) => `r${color[0]}g${color[1]}b${color[2]}`
    );
  }

  // We need to use the same sorting algorithm everywhere for the steganography
  // to work
  return _.sortBy(paddedPalette);
}

// Generate a new one of these from parsed frames with buildGlobalPalette.
export const GLOBAL_PALETTE = [
  [1, 115, 148],
  [10, 4, 32],
  [100, 100, 100],
  [101, 178, 171],
  [102, 226, 106],
  [102, 48, 219],
  [103, 100, 95],
  [103, 145, 142],
  [103, 189, 61],
  [106, 234, 108],
  [106, 42, 181],
  [107, 140, 131],
  [110, 118, 117],
  [110, 236, 121],
  [111, 107, 158],
  [112, 196, 187],
  [112, 70, 160],
  [113, 173, 143],
  [114, 85, 206],
  [116, 178, 208],
  [116, 196, 196],
  [117, 132, 132],
  [118, 191, 103],
  [119, 172, 199],
  [119, 189, 229],
  [120, 53, 106],
  [121, 173, 49],
  [121, 47, 133],
  [123, 100, 140],
  [123, 158, 151],
  [123, 256, 232],
  [125, 131, 165],
  [125, 21, 50],
  [127, 173, 160],
  [128, 117, 203],
  [128, 181, 30],
  [128, 216, 205],
  [129, 103, 26],
  [130, 153, 151],
  [130, 241, 233],
  [131, 169, 146],
  [131, 73, 194],
  [132, 0, 154],
  [135, 30, 222],
  [136, 178, 84],
  [139, 193, 63],
  [14, 197, 34],
  [140, 187, 158],
  [140, 99, 184],
  [142, 40, 3],
  [143, 208, 200],
  [148, 122, 62],
  [148, 85, 217],
  [15, 159, 195],
  [150, 256, 97],
  [155, 181, 227],
  [155, 65, 99],
  [155, 69, 9],
  [156, 212, 212],
  [156, 220, 212],
  [158, 52, 6],
  [160, 217, 16],
  [160, 90, 55],
  [161, 125, 64],
  [163, 229, 43],
  [165, 97, 126],
  [167, 21, 127],
  [171, 151, 202],
  [172, 192, 192],
  [173, 124, 41],
  [173, 182, 189],
  [174, 116, 139],
  [176, 52, 48],
  [18, 2, 212],
  [180, 52, 176],
  [181, 180, 73],
  [181, 211, 184],
  [182, 114, 47],
  [182, 201, 158],
  [182, 224, 217],
  [182, 48, 83],
  [183, 154, 100],
  [183, 95, 109],
  [185, 125, 28],
  [185, 76, 210],
  [187, 119, 40],
  [190, 164, 126],
  [191, 128, 32],
  [192, 228, 228],
  [193, 241, 138],
  [194, 62, 131],
  [194, 64, 201],
  [195, 207, 117],
  [195, 238, 85],
  [195, 60, 215],
  [198, 32, 13],
  [199, 103, 127],
  [199, 174, 188],
  [2, 42, 219],
  [20, 20, 20],
  [20, 44, 100],
  [200, 112, 139],
  [200, 19, 177],
  [200, 8, 73],
  [201, 41, 20],
  [201, 6, 5],
  [204, 20, 35],
  [205, 121, 171],
  [205, 17, 51],
  [206, 203, 199],
  [211, 103, 189],
  [211, 242, 0],
  [212, 201, 144],
  [212, 63, 152],
  [214, 237, 234],
  [214, 251, 63],
  [215, 89, 18],
  [217, 14, 88],
  [217, 150, 139],
  [217, 171, 234],
  [218, 15, 154],
  [219, 123, 11],
  [219, 47, 70],
  [22, 153, 117],
  [220, 119, 93],
  [220, 182, 138],
  [220, 199, 60],
  [221, 139, 67],
  [223, 236, 116],
  [227, 10, 244],
  [228, 188, 124],
  [228, 243, 242],
  [229, 228, 221],
  [23, 167, 147],
  [230, 106, 29],
  [230, 56, 182],
  [232, 184, 116],
  [232, 22, 217],
  [233, 163, 69],
  [234, 50, 184],
  [236, 238, 212],
  [236, 245, 244],
  [238, 97, 220],
  [239, 153, 130],
  [239, 211, 159],
  [24, 86, 206],
  [240, 147, 182],
  [241, 213, 232],
  [243, 243, 113],
  [243, 82, 30],
  [244, 129, 171],
  [244, 156, 104],
  [244, 196, 203],
  [244, 252, 251],
  [244, 74, 228],
  [245, 212, 180],
  [245, 228, 192],
  [247, 246, 195],
  [248, 239, 216],
  [249, 207, 206],
  [249, 252, 204],
  [25, 28, 28],
  [250, 244, 237],
  [251, 204, 133],
  [251, 220, 168],
  [251, 228, 185],
  [251, 243, 228],
  [252, 132, 107],
  [252, 187, 225],
  [252, 252, 236],
  [252, 252, 244],
  [252, 252, 252],
  [252, 46, 123],
  [254, 161, 122],
  [255, 136, 98],
  [256, 246, 124],
  [256, 252, 252],
  [26, 232, 188],
  [28, 60, 60],
  [28, 70, 68],
  [29, 46, 178],
  [30, 157, 256],
  [30, 183, 229],
  [30, 69, 38],
  [34, 187, 117],
  [35, 36, 36],
  [35, 83, 22],
  [38, 111, 104],
  [4, 4, 4],
  [40, 125, 18],
  [41, 19, 110],
  [42, 102, 40],
  [42, 70, 145],
  [43, 120, 39],
  [43, 84, 235],
  [44, 234, 137],
  [44, 44, 44],
  [44, 63, 19],
  [46, 242, 220],
  [47, 107, 202],
  [47, 138, 59],
  [48, 234, 219],
  [48, 25, 206],
  [49, 107, 18],
  [49, 115, 34],
  [51, 52, 51],
  [52, 214, 198],
  [52, 48, 121],
  [52, 64, 88],
  [55, 68, 60],
  [57, 130, 44],
  [58, 168, 222],
  [59, 60, 60],
  [6, 40, 113],
  [61, 226, 79],
  [61, 54, 123],
  [62, 137, 70],
  [63, 186, 244],
  [64, 132, 124],
  [66, 116, 12],
  [66, 73, 72],
  [67, 150, 142],
  [68, 124, 124],
  [70, 143, 23],
  [71, 17, 69],
  [71, 43, 47],
  [73, 77, 70],
  [76, 179, 171],
  [77, 0, 48],
  [78, 4, 191],
  [78, 80, 80],
  [79, 39, 247],
  [8, 111, 214],
  [81, 155, 175],
  [82, 103, 243],
  [84, 188, 172],
  [86, 100, 100],
  [86, 107, 58],
  [86, 164, 156],
  [86, 99, 4],
  [87, 168, 182],
  [87, 21, 46],
  [89, 188, 180],
  [9, 4, 146],
  [90, 137, 96],
  [90, 156, 156],
  [92, 174, 165],
  [92, 91, 91],
  [94, 70, 4],
  [95, 131, 181],
  [95, 193, 211],
  [96, 111, 98],
  [96, 156, 148],
  [96, 23, 3],
  [97, 156, 52],
  [97, 88, 195],
];
